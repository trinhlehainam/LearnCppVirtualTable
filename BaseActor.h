#pragma once

struct BaseActor;

void BaseActorConstructor(BaseActor* self); // BaseActor()

// ~BaseActor()
// if Destructor is declared as virtual, Compiler implicitly generates Destructor to call ChildDestructor from Vptr
// Implicitly Generated at compiler time
void BaseActorDestructor(BaseActor* self);

void BaseActorVirtualDestructor(BaseActor* self); // virtual ~BaseActor()
void BaseActorVirtualUpdate(BaseActor* self); // virtual void Update

// Method generated by this class to run Virtual Method
void BaseActorUpdate(BaseActor* self);
//

// Each class has its own virtual table
struct BaseActorVtable
{
    // only used or generated by compiler when this class or parent's Destructor is declared as virtual
    void (*ChildDestructor)(void* self);
    void (*Update)(BaseActor* self);
};

struct BaseActor
{
    void* Vptr;
    bool HasVirtualDestructor;
};